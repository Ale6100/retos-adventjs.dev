`
Â¡El grinch ðŸ‘¹ ha pasado por el taller de Santa Claus! Y menudo desastre ha montado. Ha cambiado el orden de algunos paquetes, por lo que los envÃ­os no se pueden realizar.

Por suerte, el elfo Pheralb ha detectado el patrÃ³n que ha seguido el grinch para desordenarlos. Nos ha escrito las reglas que debemos seguir para reordenar los paquetes. Las instrucciones que siguen son:

RecibirÃ¡s un string que contiene letras y parÃ©ntesis.
Cada vez que encuentres un par de parÃ©ntesis, debes voltear el contenido dentro de ellos.
Si hay parÃ©ntesis anidados, resuelve primero los mÃ¡s internos.
Devuelve el string resultante con los parÃ©ntesis eliminados, pero con el contenido volteado correctamente.
Nos ha dejado algunos ejemplos:

fixPackages('a(cb)de')
// âžž "abcde"
// Volteamos "cb" dentro de los parÃ©ntesis

fixPackages('a(bc(def)g)h')
// âžž "agdefcbh"
// 1Âº volteamos "def" â†’ "fed", luego volteamos "bcfedg" â†’ "gdefcb"

fixPackages('abc(def(gh)i)jk')
// âžž "abcighfedjk"
// 1Âº volteamos "gh" â†’ "hg", luego "defhgi" â†’ "ighfed"

fixPackages('a(b(c))e')
// âžž "acbe"
// 1Âº volteamos "c" â†’ "c", luego "bc" â†’ "cb"
`

function fixPackages(packages: string): string {
  const girar = (str: string) => {
    return str.split('').toReversed().join('')
  }

  while (packages.includes('(') && packages.includes(')')) {
    const finCorte = packages.indexOf(')')
    const inicioCorte = packages.slice(0, finCorte).lastIndexOf('(');
    const inicio = packages.slice(0, inicioCorte)
    const giro = girar(packages.slice(inicioCorte+1, finCorte));
    const fin = packages.slice(finCorte+1)

    packages = inicio + giro + fin;
  }

  return packages;
}

console.log('Reto 7:')

console.log(fixPackages('a(cb)de')) // âžž "abcde"
console.log(fixPackages('a(bc(def)g)h')) // âžž "agdefcbh"
console.log(fixPackages('abc(def(gh)i)jk')) // âžž "abcighfedjk"
console.log(fixPackages('a(b(c))e'), '\n') // âžž "acbe"
